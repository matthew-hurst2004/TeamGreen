
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author npcnp
 */
public class Calc9 extends javax.swing.JFrame {

    /**
     * Creates new form Calc9
     */
    public Calc9() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel8 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        unpaidPrincipalBalanceTextField = new javax.swing.JTextField();
        monthlyPaymentTextField = new javax.swing.JTextField();
        rightInterestRateTextField = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        extraPaymentMonthlyRightTextField = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        rightYearlyExtraTextField = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        calculateRightButton = new javax.swing.JButton();
        rightOutputLabel = new javax.swing.JLabel();
        errorRightLabel = new javax.swing.JLabel();
        rightOneTimePaymentTextField = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        leftShowButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        originalLoanTermTextField = new javax.swing.JTextField();
        interestRateTextField = new javax.swing.JTextField();
        remainingTermYearsTextField = new javax.swing.JTextField();
        originalLoanAmount = new javax.swing.JLabel();
        originalLoanTermLabel = new javax.swing.JLabel();
        interestRateLabel = new javax.swing.JLabel();
        remainingTermLabel = new javax.swing.JLabel();
        originalLoanAmountTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        extraPaymentPerMonthTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        remainingTermMonthsTextField = new javax.swing.JTextField();
        outputWithLoanTermLabel = new javax.swing.JLabel();
        calculateLeftSideButton = new javax.swing.JButton();
        leftErrorLabel = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        leftYearlyExtraTextField = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        leftOneTimePaymentTextField = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        needHelpButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        Close = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jPanel8.setBackground(new java.awt.Color(96, 0, 21));

        jPanel5.setBackground(new java.awt.Color(255, 101, 0));

        jPanel3.setBackground(new java.awt.Color(255, 101, 0));
        jPanel3.setPreferredSize(new java.awt.Dimension(312, 352));

        jLabel10.setText("Unpaid principal balance");

        jLabel11.setText("Monthly payment");

        jLabel12.setText("Interest rate");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel13.setText("Extra payments");

        unpaidPrincipalBalanceTextField.setText("0");
        unpaidPrincipalBalanceTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                unpaidPrincipalBalanceTextFieldKeyTyped(evt);
            }
        });

        monthlyPaymentTextField.setText("0");
        monthlyPaymentTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                monthlyPaymentTextFieldKeyTyped(evt);
            }
        });

        rightInterestRateTextField.setText("0");
        rightInterestRateTextField.setToolTipText("");
        rightInterestRateTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                rightInterestRateTextFieldKeyTyped(evt);
            }
        });

        jLabel14.setText("Per month");

        jPanel4.setBackground(new java.awt.Color(96, 0, 21));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        jLabel15.setText("$");

        jLabel16.setText("$");

        jLabel17.setText("% Per year");

        extraPaymentMonthlyRightTextField.setText("0");
        extraPaymentMonthlyRightTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                extraPaymentMonthlyRightTextFieldKeyTyped(evt);
            }
        });

        jLabel18.setText("$");

        jLabel21.setText("Per Year");

        rightYearlyExtraTextField.setText("0");

        jLabel22.setText("$");

        calculateRightButton.setText("Calculate");
        calculateRightButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                calculateRightButtonMouseClicked(evt);
            }
        });

        rightOutputLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        rightOutputLabel.setText("Output label");

        errorRightLabel.setBackground(new java.awt.Color(0, 0, 0));
        errorRightLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        errorRightLabel.setForeground(new java.awt.Color(255, 255, 255));
        errorRightLabel.setText("Error Label");

        rightOneTimePaymentTextField.setText("0");
        rightOneTimePaymentTextField.setToolTipText("");

        jLabel25.setText("One Time Payment");

        jLabel26.setText("$");

        leftShowButton.setText("Show Graph");
        leftShowButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                leftShowButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel18)
                    .addComponent(jLabel22)
                    .addComponent(jLabel26))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(rightOneTimePaymentTextField)
                    .addComponent(extraPaymentMonthlyRightTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                    .addComponent(rightYearlyExtraTextField))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21)
                    .addComponent(jLabel25))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addGap(7, 7, 7))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(monthlyPaymentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(unpaidPrincipalBalanceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(rightInterestRateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(158, 158, 158))
                    .addComponent(rightOutputLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(calculateRightButton, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(errorRightLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(leftShowButton, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(unpaidPrincipalBalanceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(monthlyPaymentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(rightInterestRateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addGap(88, 88, 88)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addGap(37, 37, 37)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(extraPaymentMonthlyRightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(rightYearlyExtraTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rightOneTimePaymentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25)
                    .addComponent(jLabel26))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(calculateRightButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(rightOutputLabel)
                .addGap(18, 18, 18)
                .addComponent(errorRightLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(leftShowButton)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(255, 101, 0));

        originalLoanTermTextField.setText("0");
        originalLoanTermTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                originalLoanTermTextFieldKeyTyped(evt);
            }
        });

        interestRateTextField.setText("0");
        interestRateTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                interestRateTextFieldKeyTyped(evt);
            }
        });

        remainingTermYearsTextField.setText("0");
        remainingTermYearsTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                remainingTermYearsTextFieldKeyTyped(evt);
            }
        });

        originalLoanAmount.setText(" Original loan amount");

        originalLoanTermLabel.setText("Original loan term");

        interestRateLabel.setText("Interest rate");

        remainingTermLabel.setText("Remaining loan term");

        originalLoanAmountTextField.setText("0");
        originalLoanAmountTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                originalLoanAmountTextFieldKeyTyped(evt);
            }
        });

        jLabel2.setText("   $");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jLabel3.setText("% Per year");

        jLabel4.setText("Years");

        jLabel5.setText("Years");

        jPanel2.setBackground(new java.awt.Color(96, 0, 21));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 14, Short.MAX_VALUE)
        );

        jLabel6.setText("Per month");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("Extra payments");

        jLabel8.setText("$");

        extraPaymentPerMonthTextField.setText("0");
        extraPaymentPerMonthTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                extraPaymentPerMonthTextFieldKeyTyped(evt);
            }
        });

        jLabel9.setText("Months");

        remainingTermMonthsTextField.setText("0");
        remainingTermMonthsTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                remainingTermMonthsTextFieldKeyTyped(evt);
            }
        });

        outputWithLoanTermLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        outputWithLoanTermLabel.setText("Output label");

        calculateLeftSideButton.setText("Calculate ");
        calculateLeftSideButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                calculateLeftSideButtonMouseClicked(evt);
            }
        });

        leftErrorLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        leftErrorLabel.setForeground(new java.awt.Color(255, 255, 255));
        leftErrorLabel.setText("Error label");

        jLabel23.setText("Per Year");

        leftYearlyExtraTextField.setText("0");

        jLabel24.setText("$");

        leftOneTimePaymentTextField.setText("0");

        jLabel27.setText("One Time Payment");

        jLabel28.setText("$");

        jButton1.setText("Show Graph");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(outputWithLoanTermLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(calculateLeftSideButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(remainingTermLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(interestRateLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(originalLoanTermLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(originalLoanAmount, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(remainingTermMonthsTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                                    .addComponent(originalLoanAmountTextField)
                                    .addComponent(originalLoanTermTextField)
                                    .addComponent(interestRateTextField)
                                    .addComponent(remainingTermYearsTextField))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(leftErrorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel24)
                                    .addComponent(jLabel28))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(leftOneTimePaymentTextField)
                                    .addComponent(leftYearlyExtraTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                                    .addComponent(extraPaymentPerMonthTextField))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(originalLoanAmount)
                    .addComponent(originalLoanAmountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(originalLoanTermLabel)
                    .addComponent(originalLoanTermTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(interestRateLabel)
                    .addComponent(interestRateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(remainingTermLabel)
                    .addComponent(remainingTermYearsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(1, 1, 1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(remainingTermMonthsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8)
                    .addComponent(extraPaymentPerMonthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(leftYearlyExtraTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(leftOneTimePaymentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27)
                    .addComponent(jLabel28))
                .addGap(18, 18, 18)
                .addComponent(calculateLeftSideButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(outputWithLoanTermLabel)
                .addGap(18, 18, 18)
                .addComponent(leftErrorLabel)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(96, 0, 21));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 17, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel20.setText("With loan term");

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel19.setText("Without loan term");

        needHelpButton.setText("Need Help?");
        needHelpButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                needHelpButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(needHelpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 166, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(needHelpButton)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(jLabel19))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 564, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 27, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jLabel1.setBackground(new java.awt.Color(96, 0, 21));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Mortgage Payoff Calculator");

        Close.setText("Close");
        Close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CloseMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Close)
                .addGap(122, 122, 122)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 534, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Close)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void originalLoanAmountTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_originalLoanAmountTextFieldKeyTyped
        Helper.consumeNotNumbersAllowDecimal(originalLoanAmountTextField, evt);
    }//GEN-LAST:event_originalLoanAmountTextFieldKeyTyped

    private void originalLoanTermTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_originalLoanTermTextFieldKeyTyped
        Helper.consumeNotNumbers(originalLoanTermTextField, evt);
    }//GEN-LAST:event_originalLoanTermTextFieldKeyTyped

    private void interestRateTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_interestRateTextFieldKeyTyped
        Helper.consumeNotNumbersAllowDecimal(interestRateTextField, evt);        
    }//GEN-LAST:event_interestRateTextFieldKeyTyped

    private void remainingTermYearsTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_remainingTermYearsTextFieldKeyTyped
        Helper.consumeNotNumbers(remainingTermYearsTextField, evt);        
    }//GEN-LAST:event_remainingTermYearsTextFieldKeyTyped

    private void remainingTermMonthsTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_remainingTermMonthsTextFieldKeyTyped
        Helper.consumeNotNumbers(remainingTermMonthsTextField, evt);        
    }//GEN-LAST:event_remainingTermMonthsTextFieldKeyTyped

    private void extraPaymentPerMonthTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_extraPaymentPerMonthTextFieldKeyTyped
        Helper.consumeNotNumbersAllowDecimal(extraPaymentPerMonthTextField, evt);        
    }//GEN-LAST:event_extraPaymentPerMonthTextFieldKeyTyped

    private void calculateLeftSideButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_calculateLeftSideButtonMouseClicked
        // This is where the magic happens
        outputWithLoanTermLabel.setText("");
        leftErrorLabel.setText("");
        
        try {
            double originalLoanAmountDouble = Double.parseDouble(originalLoanAmountTextField.getText());
            double originalLoanTermDouble = Double.parseDouble(originalLoanTermTextField.getText());
            double interestRateDouble = Double.parseDouble(interestRateTextField.getText());
            double remainingTermYearsDouble;
            double remainingTermMonthsDouble;
            double extraPaymentPerMonthDouble;
            double leftYearlyExtradouble;
            double leftOneTimePaymentDouble;
            
            
            if (leftOneTimePaymentTextField.getText().equals("")) 
            {
                leftOneTimePaymentDouble = 0;
                leftOneTimePaymentTextField.setText("0");
                leftErrorLabel.setText("You didn't enter a number for the extra payment box and it will be read as 0.");
            } else {
                leftOneTimePaymentDouble = Double.parseDouble(leftOneTimePaymentTextField.getText());
            }             
            
            if (interestRateDouble <= 0){
                leftErrorLabel.setText("The first three boxes need a number above zero.");
                JOptionPane.showMessageDialog(this, "The first three boxes need a number above zero.");
                return;
            }
                                
            if (leftYearlyExtraTextField.getText().equals("")) 
            {
                leftYearlyExtradouble = 0;
                leftYearlyExtraTextField.setText("0");
                leftErrorLabel.setText("You didn't enter a number for the extra payment box and it will be read as 0.");
            } else {
                leftYearlyExtradouble = Double.parseDouble(leftYearlyExtraTextField.getText());
            }                         

            if (extraPaymentPerMonthTextField.getText().equals("")) 
            {
                extraPaymentPerMonthDouble = 0;
                extraPaymentPerMonthTextField.setText("0");
                leftErrorLabel.setText("You didn't enter a number for the extra payment box and it will be read as 0.");
            } else {
                extraPaymentPerMonthDouble = Double.parseDouble(extraPaymentPerMonthTextField.getText());
            }                       
                         
                    
            if (remainingTermYearsTextField.getText().equals("")) 
            {
                remainingTermYearsDouble = 0;
                remainingTermYearsTextField.setText("0");
            } else {
                remainingTermYearsDouble = Double.parseDouble(remainingTermYearsTextField.getText());
            }        
            
            if (remainingTermMonthsTextField.getText().equals("")) 
            {
                remainingTermMonthsDouble = 0;
                remainingTermMonthsTextField.setText("0");
            } else {
                remainingTermMonthsDouble = Double.parseDouble(remainingTermMonthsTextField.getText());
            }
            

            
                        
            if (originalLoanAmountDouble == 0 || originalLoanTermDouble == 0){
                leftErrorLabel.setText("The first three boxes need a number above zero.");
                JOptionPane.showMessageDialog(this, "The first three boxes need a number above zero.");
                return;
            }
            
            if (remainingTermMonthsDouble + (remainingTermYearsDouble * 12) > (originalLoanTermDouble * 12)){
                
                JOptionPane.showMessageDialog(this, "The remaining loan term cannot be bigger than the orginal term.");
                leftErrorLabel.setText("The remaining loan term cannot be bigger than the orginal term.");
                return;

            }
            
            if (remainingTermMonthsDouble + remainingTermYearsDouble == 0){ // I am making sure the remaining loan term is not zero
                leftErrorLabel.setText("Make sure the remaining loan term is more than zero");
                JOptionPane.showMessageDialog(this, "The remaing term needs to be above zero.");
                return;
            }
            
            // testing ends and logic starts
            
            interestRateDouble = interestRateDouble / 12 / 100; // make a monthly decimal
            double totalMonths = (remainingTermYearsDouble * 12) + remainingTermMonthsDouble;  
            
            double monthlyPayment = originalLoanAmountDouble * (interestRateDouble * 
                    Math.pow(1 + interestRateDouble, (originalLoanTermDouble * 12))) / (Math.pow(1 + interestRateDouble, (originalLoanTermDouble * 12)) - 1);
            
            
            double originalRemainingDif = (originalLoanTermDouble * 12) - totalMonths;
            
            
            // This accounts for the time before the extra payments 
            while (originalRemainingDif > 0){
                originalLoanAmountDouble = originalLoanAmountDouble * (1 + interestRateDouble) - monthlyPayment;
                originalRemainingDif = originalRemainingDif - 1;
            }


            double totalPayment = monthlyPayment + extraPaymentPerMonthDouble;
            
            int monthsLeft = 0;
            
            double moneyLeft = originalLoanAmountDouble;
            
            
            moneyLeft = moneyLeft - leftOneTimePaymentDouble;
           
            while (moneyLeft > 0) {
                moneyLeft = moneyLeft * (1 + interestRateDouble) - totalPayment;
                        
                
                if (monthsLeft % 12 == 0 && monthsLeft >0){
                    moneyLeft = moneyLeft - leftYearlyExtradouble;
                }
                
                
                monthsLeft = monthsLeft + 1;
                if (monthsLeft > 2400){
                outputWithLoanTermLabel.setText("With the numbers provided it will take over 200 years to pay off this mortgage.");
                return;
                        }
            }
            
            
            int years = monthsLeft / 12; 
            int remainingMonths = monthsLeft % 12; 

            
        outputWithLoanTermLabel.setText("You have " + years + " years and " + remainingMonths + " months remaining");     
            
        } catch (NumberFormatException e) {
           
            if (originalLoanAmountTextField.getText().equals("") || originalLoanTermTextField.getText().equals("") ||
                    interestRateTextField.getText().equals("")){
                leftErrorLabel.setText("Make sure the first five boxes have the proper number");
                JOptionPane.showMessageDialog(this, "Make sure the first five boxes have the proper number");

            } else {
                leftErrorLabel.setText("Please look over the numbers entered.");
            }
        }
        
    }//GEN-LAST:event_calculateLeftSideButtonMouseClicked

    private void CloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CloseMouseClicked
        this.dispose();
    }//GEN-LAST:event_CloseMouseClicked

    private void unpaidPrincipalBalanceTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_unpaidPrincipalBalanceTextFieldKeyTyped
        Helper.consumeNotNumbersAllowDecimal(unpaidPrincipalBalanceTextField, evt);        
    }//GEN-LAST:event_unpaidPrincipalBalanceTextFieldKeyTyped

    private void monthlyPaymentTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_monthlyPaymentTextFieldKeyTyped
        Helper.consumeNotNumbersAllowDecimal(monthlyPaymentTextField, evt);        
    }//GEN-LAST:event_monthlyPaymentTextFieldKeyTyped

    private void rightInterestRateTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rightInterestRateTextFieldKeyTyped
        Helper.consumeNotNumbersAllowDecimal(rightInterestRateTextField, evt);        
    }//GEN-LAST:event_rightInterestRateTextFieldKeyTyped

    private void extraPaymentMonthlyRightTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_extraPaymentMonthlyRightTextFieldKeyTyped
        Helper.consumeNotNumbersAllowDecimal(extraPaymentMonthlyRightTextField, evt);        
    }//GEN-LAST:event_extraPaymentMonthlyRightTextFieldKeyTyped

    private void calculateRightButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_calculateRightButtonMouseClicked
        rightOutputLabel.setText("");
        errorRightLabel.setText("");
        double extraPaymentMonthlyRightDouble;
        
        
        try {
            double unpaidPrincipalBalanceDouble = Double.parseDouble(unpaidPrincipalBalanceTextField.getText());
            double monthlyPaymentDouble = Double.parseDouble(monthlyPaymentTextField.getText());
            double rightInterestRateDouble = Double.parseDouble(rightInterestRateTextField.getText());
            double rightYearlyExtradouble;
            double rightOneTimePaymentDouble;
            
            
            if (rightOneTimePaymentTextField.getText().equals("")) 
            {
                rightOneTimePaymentDouble = 0;
                rightOneTimePaymentTextField.setText("0");
                errorRightLabel.setText("You didn't enter a number for the extra payment box and it will be read as 0.");
            } else {
                rightOneTimePaymentDouble = Double.parseDouble(rightOneTimePaymentTextField.getText());
            }               
            
            
            if (rightYearlyExtraTextField.getText().equals("")) 
            {
                rightYearlyExtradouble = 0;
                rightYearlyExtraTextField.setText("0");
                leftErrorLabel.setText("The empty box will be read as zero.");
            } else {
                rightYearlyExtradouble = Double.parseDouble(rightYearlyExtraTextField.getText());
            }                 
            
            if (rightInterestRateDouble <= 0) {
                errorRightLabel.setText("The first three boxes need a number above zero.");
                JOptionPane.showMessageDialog(this, "The first three boxes need a number above zero.");
                return;

            }

            
            if (extraPaymentMonthlyRightTextField.getText().equals("")) 
            {
                extraPaymentMonthlyRightDouble = 0;
                rightYearlyExtraTextField.setText("0");
                errorRightLabel.setText("You didn't enter a number for the extra payment box and it will be read as 0.");
            } else {
                extraPaymentMonthlyRightDouble = Double.parseDouble(extraPaymentMonthlyRightTextField.getText());
            }   
           
            
            if (unpaidPrincipalBalanceDouble == 0 || monthlyPaymentDouble == 0){
                errorRightLabel.setText("Make sure the first three boxes are more than zero");
                JOptionPane.showMessageDialog(this, "The first three boxes need a number above zero.");
                return;
            }     
            

            
            double monthlyInterestRate = (rightInterestRateDouble / 100) / 12; // making it monthly and a decimal
                        
            int monthsLeft = 0;
            
            if (unpaidPrincipalBalanceDouble < rightOneTimePaymentDouble){
                rightOutputLabel.setText("The one time payment will payoff the mortgage instantly.");
                return;
            }
            
            unpaidPrincipalBalanceDouble = unpaidPrincipalBalanceDouble - rightOneTimePaymentDouble;
            
            while (unpaidPrincipalBalanceDouble > 0) {
                
                double interestPayment = unpaidPrincipalBalanceDouble * monthlyInterestRate;
                
                double principalPayment = monthlyPaymentDouble - interestPayment;
                            
                unpaidPrincipalBalanceDouble = unpaidPrincipalBalanceDouble - (principalPayment + extraPaymentMonthlyRightDouble);

                if (monthsLeft % 12 == 0 && monthsLeft > 0) {
                    unpaidPrincipalBalanceDouble = unpaidPrincipalBalanceDouble - rightYearlyExtradouble;
                }
                
                monthsLeft = monthsLeft + 1;

                if (monthsLeft > 2400){
                    rightOutputLabel.setText("With the numbers provided it will take over 200 years to pay off this mortgage.");
                    return;
                }                         
            }            
            
            
            int years = monthsLeft / 12; 
            int remainingMonths = monthsLeft % 12; 
            

            rightOutputLabel.setText("You have " + years + " years and " + remainingMonths + " months remaining");
        } catch (NumberFormatException e) {
            if (unpaidPrincipalBalanceTextField.getText().equals("") || monthlyPaymentTextField.getText().equals("") ||
                    rightInterestRateTextField.getText().equals("")){
                errorRightLabel.setText("Make sure the first three boxes have the proper numbers.");
                JOptionPane.showMessageDialog(this,"Make sure the first three boxes have the proper numbers.");

            }
            JOptionPane.showMessageDialog(this,"Please look over the numbers entered.");
            errorRightLabel.setText("Please look over the numbers entered.");

        }
            
    }//GEN-LAST:event_calculateRightButtonMouseClicked

    private void needHelpButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_needHelpButtonMouseClicked
        new calc5HelpFrame().setVisible(true);
    }//GEN-LAST:event_needHelpButtonMouseClicked

    private void leftShowButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_leftShowButtonMouseClicked
        // TODO add your handling code here:
        rightOutputLabel.setText("");
        errorRightLabel.setText("");
        double extraPaymentMonthlyRightDouble;
        
        
        try {
            double unpaidPrincipalBalanceDouble = Double.parseDouble(unpaidPrincipalBalanceTextField.getText());
            double monthlyPaymentDouble = Double.parseDouble(monthlyPaymentTextField.getText());
            double rightInterestRateDouble = Double.parseDouble(rightInterestRateTextField.getText());
            double rightYearlyExtradouble;
            double rightOneTimePaymentDouble;
            
            
            if (rightOneTimePaymentTextField.getText().equals("")) 
            {
                rightOneTimePaymentDouble = 0;
                rightOneTimePaymentTextField.setText("0");
                errorRightLabel.setText("You didn't enter a number for the extra payment box and it will be read as 0.");
            } else {
                rightOneTimePaymentDouble = Double.parseDouble(rightOneTimePaymentTextField.getText());
            }               
            
            
            if (rightYearlyExtraTextField.getText().equals("")) 
            {
                rightYearlyExtradouble = 0;
                rightYearlyExtraTextField.setText("0");
                leftErrorLabel.setText("The empty box will be read as zero.");
            } else {
                rightYearlyExtradouble = Double.parseDouble(rightYearlyExtraTextField.getText());
            }                 
            
            if (rightInterestRateDouble <= 0) {
                errorRightLabel.setText("The first three boxes need a number above zero.");
                JOptionPane.showMessageDialog(this, "The first three boxes need a number above zero.");
                return;

            }

            
            if (extraPaymentMonthlyRightTextField.getText().equals("")) 
            {
                extraPaymentMonthlyRightDouble = 0;
                rightYearlyExtraTextField.setText("0");
                errorRightLabel.setText("You didn't enter a number for the extra payment box and it will be read as 0.");
            } else {
                extraPaymentMonthlyRightDouble = Double.parseDouble(extraPaymentMonthlyRightTextField.getText());
            }   
           
            
            if (unpaidPrincipalBalanceDouble == 0 || monthlyPaymentDouble == 0){
                errorRightLabel.setText("Make sure the first three boxes are more than zero");
                JOptionPane.showMessageDialog(this, "The first three boxes need a number above zero.");
                return;
            }     
            

            
            double monthlyInterestRate = (rightInterestRateDouble / 100) / 12; // making it monthly and a decimal
                        
            int monthsLeft = 0;
            
            if (unpaidPrincipalBalanceDouble < rightOneTimePaymentDouble){
                rightOutputLabel.setText("The one time payment will payoff the mortgage instantly.");
                return;
            }
            
            double oldUnpaidPrincipalBalanceDouble = unpaidPrincipalBalanceDouble;
            unpaidPrincipalBalanceDouble = unpaidPrincipalBalanceDouble - rightOneTimePaymentDouble;
            
            DefaultCategoryDataset dataset = new DefaultCategoryDataset();
            
            while (unpaidPrincipalBalanceDouble > 0) {
                dataset.addValue(unpaidPrincipalBalanceDouble, "New unpaid principal", String.valueOf(monthsLeft));
                dataset.addValue(oldUnpaidPrincipalBalanceDouble, "Old unpaid principal", String.valueOf(monthsLeft));
                                
                double interestPayment = unpaidPrincipalBalanceDouble * monthlyInterestRate;
                
                double principalPayment = monthlyPaymentDouble - interestPayment;
                            
                unpaidPrincipalBalanceDouble = unpaidPrincipalBalanceDouble - (principalPayment + extraPaymentMonthlyRightDouble);
                
                oldUnpaidPrincipalBalanceDouble = oldUnpaidPrincipalBalanceDouble - principalPayment;

                if (monthsLeft % 12 == 0 && monthsLeft > 0) {
                    unpaidPrincipalBalanceDouble = unpaidPrincipalBalanceDouble - rightYearlyExtradouble;
                }
                
                monthsLeft = monthsLeft + 1;

                if (monthsLeft > 2400){
                    rightOutputLabel.setText("With the numbers provided it will take over 200 years to pay off this mortgage.");
                    return;
                }                         
            }            
            
            
            int years = monthsLeft / 12; 
            int remainingMonths = monthsLeft % 12; 

           
            
            JFreeChart chart = ChartFactory.createLineChart("Mortgage Payoff", "Months", "Balance", Helper.convertDataset(dataset), PlotOrientation.VERTICAL, true, true, false);
            ChartPanel chartPanel = new ChartPanel (chart);
            JFrame frame = new JFrame ();
            frame.setSize(1000, 800);
            frame.setContentPane(chartPanel);
            frame.setLocationRelativeTo(null);
            frame.setVisible(true);            

            rightOutputLabel.setText("You have " + years + " years and " + remainingMonths + " months remaining");
        } catch (NumberFormatException e) {
            if (unpaidPrincipalBalanceTextField.getText().equals("") || monthlyPaymentTextField.getText().equals("") ||
                    rightInterestRateTextField.getText().equals("")){
                errorRightLabel.setText("Make sure the first three boxes have the proper numbers.");
                JOptionPane.showMessageDialog(this,"Make sure the first three boxes have the proper numbers.");

            }
            JOptionPane.showMessageDialog(this,"Please look over the numbers entered.");
            errorRightLabel.setText("Please look over the numbers entered.");

        }
                    
        
        
    }//GEN-LAST:event_leftShowButtonMouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here
        
        // This is where the magic happens
        outputWithLoanTermLabel.setText("");
        leftErrorLabel.setText("");
        
        try {
            double originalLoanAmountDouble = Double.parseDouble(originalLoanAmountTextField.getText());
            double originalLoanTermDouble = Double.parseDouble(originalLoanTermTextField.getText());
            double interestRateDouble = Double.parseDouble(interestRateTextField.getText());
            double remainingTermYearsDouble;
            double remainingTermMonthsDouble;
            double extraPaymentPerMonthDouble;
            double leftYearlyExtradouble;
            double leftOneTimePaymentDouble;
            
            
            if (leftOneTimePaymentTextField.getText().equals("")) 
            {
                leftOneTimePaymentDouble = 0;
                leftOneTimePaymentTextField.setText("0");
                leftErrorLabel.setText("You didn't enter a number for the extra payment box and it will be read as 0.");
            } else {
                leftOneTimePaymentDouble = Double.parseDouble(leftOneTimePaymentTextField.getText());
            }             
            
            if (interestRateDouble <= 0){
                leftErrorLabel.setText("The first three boxes need a number above zero.");
                JOptionPane.showMessageDialog(this, "The first three boxes need a number above zero.");
                return;
            }
                                
            if (leftYearlyExtraTextField.getText().equals("")) 
            {
                leftYearlyExtradouble = 0;
                leftYearlyExtraTextField.setText("0");
                leftErrorLabel.setText("You didn't enter a number for the extra payment box and it will be read as 0.");
            } else {
                leftYearlyExtradouble = Double.parseDouble(leftYearlyExtraTextField.getText());
            }                         

            if (extraPaymentPerMonthTextField.getText().equals("")) 
            {
                extraPaymentPerMonthDouble = 0;
                extraPaymentPerMonthTextField.setText("0");
                leftErrorLabel.setText("You didn't enter a number for the extra payment box and it will be read as 0.");
            } else {
                extraPaymentPerMonthDouble = Double.parseDouble(extraPaymentPerMonthTextField.getText());
            }                       
                         
                    
            if (remainingTermYearsTextField.getText().equals("")) 
            {
                remainingTermYearsDouble = 0;
                remainingTermYearsTextField.setText("0");
            } else {
                remainingTermYearsDouble = Double.parseDouble(remainingTermYearsTextField.getText());
            }        
            
            if (remainingTermMonthsTextField.getText().equals("")) 
            {
                remainingTermMonthsDouble = 0;
                remainingTermMonthsTextField.setText("0");
            } else {
                remainingTermMonthsDouble = Double.parseDouble(remainingTermMonthsTextField.getText());
            }
            

            
                        
            if (originalLoanAmountDouble == 0 || originalLoanTermDouble == 0){
                leftErrorLabel.setText("The first three boxes need a number above zero.");
                JOptionPane.showMessageDialog(this, "The first three boxes need a number above zero.");
                return;
            }
            
            if (remainingTermMonthsDouble + (remainingTermYearsDouble * 12) > (originalLoanTermDouble * 12)){
                
                JOptionPane.showMessageDialog(this, "The remaining loan term cannot be bigger than the orginal term.");
                leftErrorLabel.setText("The remaining loan term cannot be bigger than the orginal term.");
                return;

            }
            
            if (remainingTermMonthsDouble + remainingTermYearsDouble == 0){ // I am making sure the remaining loan term is not zero
                leftErrorLabel.setText("Make sure the remaining loan term is more than zero");
                JOptionPane.showMessageDialog(this, "The remaing term needs to be above zero.");
                return;
            }
            
            // testing ends and logic starts
            
            interestRateDouble = interestRateDouble / 12 / 100; // make a monthly decimal
            double totalMonths = (remainingTermYearsDouble * 12) + remainingTermMonthsDouble;  
            
            double monthlyPayment = originalLoanAmountDouble * (interestRateDouble * 
                    Math.pow(1 + interestRateDouble, (originalLoanTermDouble * 12))) / (Math.pow(1 + interestRateDouble, (originalLoanTermDouble * 12)) - 1);
            
            
            double originalRemainingDif = (originalLoanTermDouble * 12) - totalMonths;
            
            
            // This accounts for the time before the extra payments 
            while (originalRemainingDif > 0){
                originalLoanAmountDouble = originalLoanAmountDouble * (1 + interestRateDouble) - monthlyPayment;
                originalRemainingDif = originalRemainingDif - 1;
            }


            double totalPayment = monthlyPayment + extraPaymentPerMonthDouble;
            
            int monthsLeft = 0;
            
            double moneyLeft = originalLoanAmountDouble;
            
            double oldMoneyLeft = originalLoanAmountDouble;
            
            moneyLeft = moneyLeft - leftOneTimePaymentDouble;
           
            DefaultCategoryDataset dataset = new DefaultCategoryDataset();
            
            while (moneyLeft > 0) {                      
                dataset.addValue(moneyLeft, "New unpaid principal", String.valueOf(monthsLeft));
                dataset.addValue(oldMoneyLeft, "Old unpaid principal", String.valueOf(monthsLeft));
                
                oldMoneyLeft = oldMoneyLeft * (1 + interestRateDouble) - monthlyPayment;
                moneyLeft = moneyLeft * (1 + interestRateDouble) - totalPayment;                
                if (monthsLeft % 12 == 0 && monthsLeft >0){
                    moneyLeft = moneyLeft - leftYearlyExtradouble;
                }
                
                
                monthsLeft = monthsLeft + 1;
                if (monthsLeft > 2400){
                outputWithLoanTermLabel.setText("With the numbers provided it will take over 200 years to pay off this mortgage.");
                return;
                        }
            }
            
            
            int years = monthsLeft / 12; 
            int remainingMonths = monthsLeft % 12; 
            
            
            
            JFreeChart chart = ChartFactory.createLineChart("Mortgage Payoff", "Months", "Balance", Helper.convertDataset(dataset), PlotOrientation.VERTICAL, true, true, false);
            ChartPanel chartPanel = new ChartPanel (chart);
            JFrame frame = new JFrame ();
            frame.setSize(1000, 800);
            frame.setContentPane(chartPanel);
            frame.setLocationRelativeTo(null);
            frame.setVisible(true);                   
            outputWithLoanTermLabel.setText("You have " + years + " years and " + remainingMonths + " months remaining");     
            
        } catch (NumberFormatException e) {
           
            if (originalLoanAmountTextField.getText().equals("") || originalLoanTermTextField.getText().equals("") ||
                    interestRateTextField.getText().equals("")){
                leftErrorLabel.setText("Make sure the first five boxes have the proper number");
                JOptionPane.showMessageDialog(this, "Make sure the first five boxes have the proper number");

            } else {
                leftErrorLabel.setText("Please look over the numbers entered.");
            }
        }        
    }//GEN-LAST:event_jButton1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calc9.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calc9.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calc9.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calc9.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Calc9().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Close;
    private javax.swing.JButton calculateLeftSideButton;
    private javax.swing.JButton calculateRightButton;
    private javax.swing.JLabel errorRightLabel;
    private javax.swing.JTextField extraPaymentMonthlyRightTextField;
    private javax.swing.JTextField extraPaymentPerMonthTextField;
    private javax.swing.JLabel interestRateLabel;
    private javax.swing.JTextField interestRateTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JLabel leftErrorLabel;
    private javax.swing.JTextField leftOneTimePaymentTextField;
    private javax.swing.JButton leftShowButton;
    private javax.swing.JTextField leftYearlyExtraTextField;
    private javax.swing.JTextField monthlyPaymentTextField;
    private javax.swing.JButton needHelpButton;
    private javax.swing.JLabel originalLoanAmount;
    private javax.swing.JTextField originalLoanAmountTextField;
    private javax.swing.JLabel originalLoanTermLabel;
    private javax.swing.JTextField originalLoanTermTextField;
    private javax.swing.JLabel outputWithLoanTermLabel;
    private javax.swing.JLabel remainingTermLabel;
    private javax.swing.JTextField remainingTermMonthsTextField;
    private javax.swing.JTextField remainingTermYearsTextField;
    private javax.swing.JTextField rightInterestRateTextField;
    private javax.swing.JTextField rightOneTimePaymentTextField;
    private javax.swing.JLabel rightOutputLabel;
    private javax.swing.JTextField rightYearlyExtraTextField;
    private javax.swing.JTextField unpaidPrincipalBalanceTextField;
    // End of variables declaration//GEN-END:variables
}
